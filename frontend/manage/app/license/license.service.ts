import { Injectable }       from '@angular/core';
import { Http, Headers }    from '@angular/http';

import 'rxjs/add/operator/toPromise';

import { License }            from './license';
import { CrudService }      from '../crud/crud.service';

declare var Config: any; //  this comes from the autogenerated config.js file

@Injectable()
export class LicenseService{
    private masterFileListUrl: string;
    private http:Http;
    private baseUrl: string;
    private lsdUrl: string;
    defaultHttpHeaders = new Headers({'Content-Type': 'application/json'});
    

    constructor (http: Http) {
        this.http = http;
        this.baseUrl = Config.frontend.url;
        this.lsdUrl = Config.lsd.url
        this.masterFileListUrl = Config.frontend.url + '/api/v1/repositories/master-files';
    }


    decode(jsonObj: any): License {
        return {
            id: jsonObj.ID,
            publicationTitle: jsonObj.publication_title,
            userName: jsonObj.user_name,
            type: jsonObj.type,
            devices: jsonObj.device_count,
            status: jsonObj.status,
            purchaseID: jsonObj.purchase_id
        }
    }

    get(devices: number): Promise<License[]> {
        var self = this
        var headers: Headers = new Headers;
        return this.http
            .get(
                this.baseUrl + "/api/v1/licenses?devices=" + devices,
                { headers: this.defaultHttpHeaders })
            .toPromise()
            .then(function (response) {
                let items: License[] = [];

                for (let jsonObj of response.json()) {
                    items.push(self.decode(jsonObj));
                }
                return items;
            })
            .catch(this.handleError);
    }

    protected handleError(error: any): Promise<any> {
        console.error('An error occurred', error);
        return Promise.reject(error.message || error);
    }
}
